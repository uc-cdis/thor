apiVersion: apps/v1
kind: Deployment
metadata:
  name: thor-deployment
  annotations:
  {{- with .Values.podAnnotations }}
    {{- toYaml . | nindent 4 }}
  {{- end }}
  labels:
    {{- include "thor.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    # Only select pods based on the 'app' label
    matchLabels:
      {{- include "thor.selectorLabels" . | nindent 6 }}
      public: "yes"
  template:
    metadata:
      labels:
        {{- include "thor.selectorLabels" . | nindent 8 }}
        public: "yes"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 25
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - thor
              topologyKey: "kubernetes.io/hostname"
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            preference:
              matchExpressions:
              - key: karpenter.sh/capacity-type
                operator: In
                values:
                - on-demand
          - weight: 99
            preference:
              matchExpressions:
              - key: eks.amazonaws.com/capacityType
                operator: In
                values:
                - ONDEMAND
      automountServiceAccountToken: false
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      initContainers:
        - name: thor-db-create
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          volumeMounts:
            - name: thor-g3auto
              readOnly: true
              mountPath: /src/thor.env
              subPath: thor.env
          command: ["/bin/sh"]
          args:
            - "-c"
            - |
              poetry run python /src/src/thor/create_all_tables.py
      serviceAccountName: thor-sa
      containers:
      - name: thor
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
        env:
          {{- toYaml .Values.env | nindent 12 }}
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
        volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 12 }}
