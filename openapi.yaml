---
openapi: 3.0.2
info:
  title: Thor Gen3 Release Orchestrator
  version: 0.1.0
paths:
  "/releases":
    get:
      summary: Get All Releases
      description: 'Returns all the releases in the Releases table. '
      operationId: get_all_releases_releases_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/releases/{release_name}":
    get:
      summary: Get Single Release
      description: 'Reads out the release associated with a particular release name. '
      operationId: get_single_release_releases__release_name__get
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    post:
      summary: Create New Release
      description: 'This endpoint is used to create a new release and all associated
        tasks with status PENDING. '
      operationId: create_new_release_releases__release_name__post
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/releases/{release_name}/tasks":
    get:
      summary: Get All Release Tasks
      description: "This returns JSON of all tasks with release_name corresponding
        to the given name. \nIf there are no such tasks, returns an empty list. "
      operationId: get_all_release_tasks_releases__release_name__tasks_get
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/releases/{release_name}/tasks/{step_num}":
    get:
      summary: Get Release Task Specific
      description: "This returns the task with release_name corresponding to the given
        input, and \nstep_num corresponding to the given input. There should only
        be one such task. \nIf there are no such tasks, returns a JSON with task:None. "
      operationId: get_release_task_specific_releases__release_name__tasks__step_num__get
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      - required: true
        schema:
          title: Step Num
          type: integer
        name: step_num
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/tasks":
    get:
      summary: Get All Tasks
      description: "Takes in a release_name and step_num as query parameters, \nand
        returns the corresponding task with the given release_name and step_num.\nIf
        no query parameters passed, returns all the tasks in the Tasks table. "
      operationId: get_all_tasks_tasks_get
      parameters:
      - required: false
        schema:
          title: Release Name
          type: string
        name: release_name
        in: query
      - required: false
        schema:
          title: Step Num
          type: integer
        name: step_num
        in: query
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    post:
      summary: Create New Task
      description: 'This endpoint is used to create a new task. '
      operationId: create_new_task_tasks_post
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Task"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/tasks/{task_id}":
    get:
      summary: Get Single Task
      description: 'Reads out the task associated with a given task_id. '
      operationId: get_single_task_tasks__task_id__get
      parameters:
      - required: true
        schema:
          title: Task Id
        name: task_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
    put:
      summary: Update Task Status
      description: This endpoint is used to update the status of a task.
      operationId: update_task_status_tasks__task_id__put
      parameters:
      - required: true
        schema:
          title: Task Id
          type: integer
        name: task_id
        in: path
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TaskStatus"
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/time/test":
    get:
      summary: What Time Is It
      description: 'auxiliary api endpoint to return the current timestamp in which
        Thor is operating. '
      operationId: what_time_is_it_time_test_get
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/releases/{release_name}/start":
    post:
      summary: Start Release
      description: "This endpoint starts a release from the very beginning. \nAssumes
        that all tasks thus far have status 'PENDING', \nand that the release_name
        is valid. "
      operationId: start_release_releases__release_name__start_post
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/releases/{release_name}/restart":
    post:
      summary: Restart Release
      description: "Restarts a release from the first unsuccessful step. \nWill then
        run through the steps in order until complete or unsuccessful. "
      operationId: restart_release_releases__release_name__restart_post
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/run_task/{task_id}":
    put:
      summary: Run Task
      description: 'This endpoint is used to run a task. '
      operationId: run_task_run_task__task_id__put
      parameters:
      - required: true
        schema:
          title: Task Id
          type: integer
        name: task_id
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/releases/{release_name}/run_step/{step_num}":
    put:
      summary: Run Step
      description: 'This endpoint is used to run a specific step in a release. '
      operationId: run_step_releases__release_name__run_step__step_num__put
      parameters:
      - required: true
        schema:
          title: Release Name
          type: string
        name: release_name
        in: path
      - required: true
        schema:
          title: Step Num
          type: integer
        name: step_num
        in: path
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
        '422':
          description: Validation Error
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/HTTPValidationError"
  "/thor-admin/clear":
    put:
      summary: Clear All
      description: 'This endpoint is used to clear all data. '
      operationId: clear_all_clear_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
  "/thor-admin/reseed":
    put:
      summary: Reseed
      description: 'Reseeds data using the native reseed() and test data. '
      operationId: reseed_reseed_put
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema: {}
components:
  schemas:
    HTTPValidationError:
      title: HTTPValidationError
      type: object
      properties:
        detail:
          title: Detail
          type: array
          items:
            "$ref": "#/components/schemas/ValidationError"
    Task:
      title: Task
      required:
      - task_name
      - release_id
      - step_num
      type: object
      properties:
        task_name:
          title: Task Name
          type: string
        release_id:
          title: Release Id
          type: integer
        step_num:
          title: Step Num
          type: integer
    TaskStatus:
      title: TaskStatus
      required:
      - status
      type: object
      properties:
        status:
          title: Status
          type: string
    ValidationError:
      title: ValidationError
      required:
      - loc
      - msg
      - type
      type: object
      properties:
        loc:
          title: Location
          type: array
          items:
            type: string
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
